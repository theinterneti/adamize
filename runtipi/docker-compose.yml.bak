services:
  runtipi-reverse-proxy:
    container_name: runtipi-reverse-proxy
    depends_on:
      runtipi:
        condition: service_healthy
    image: traefik:v3.2
    restart: unless-stopped
    ports:
      - "8080:80"
    command: --providers.docker
    volumes:
      - ./traefik:/etc/traefik
      - ./traefik/shared:/shared
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - tipi_main_network

  runtipi-db:
    container_name: runtipi-db
    image: postgres:14
    restart: unless-stopped
    stop_grace_period: 1m
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 
      POSTGRES_USER: tipi
      POSTGRES_DB: tipi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d tipi -U tipi"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 5s
    networks:
      - tipi_main_network

  runtipi-queue:
    container_name: runtipi-queue
    image: rabbitmq:4-alpine
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 5s
    environment:
      RABBITMQ_DEFAULT_USER: tipi
      RABBITMQ_DEFAULT_PASS: 
    networks:
      - tipi_main_network

  runtipi:
    container_name: runtipi
    healthcheck:
      start_period: 10s
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 10s
      retries: 20
    image: ghcr.io/runtipi/runtipi:
    restart: unless-stopped
    depends_on:
      runtipi-db:
        condition: service_healthy
      runtipi-queue:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      # Data
      - ./media:/data/media
      - ./state:/data/state
      - ./repos:/data/repos
      - ./apps:/data/apps
      - ./logs:/data/logs
      - ./traefik:/data/traefik
      - ./user-config:/data/user-config
      - ./app-data:/app-data
      - ./backups:/data/backups
      # Static
      - ./.env:/data/.env
      - ./cache:/cache
      - ./docker-compose.yml:/data/docker-compose.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      NODE_ENV: production
    networks:
      - tipi_main_network
    labels:
      # ---- General ----- #
      traefik.enable: true
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.runtipi.forwardauth.address: http://runtipi:3000/api/auth/traefik

      # ---- Dashboard ----- #
      traefik.http.services.dashboard.loadbalancer.server.port: 3000
      # Local ip
      traefik.http.routers.dashboard.rule: PathPrefix("/")
      traefik.http.routers.dashboard.service: dashboard
      traefik.http.routers.dashboard.entrypoints: web
      # Websecure
      traefik.http.routers.dashboard-insecure.rule: Host() && PathPrefix()
      traefik.http.routers.dashboard-insecure.service: dashboard
      traefik.http.routers.dashboard-insecure.entrypoints: web
      # Local domain
      traefik.http.routers.dashboard-local-insecure.rule: Host()
      traefik.http.routers.dashboard-local-insecure.entrypoints: web
      traefik.http.routers.dashboard-local-insecure.service: dashboard

networks:
  tipi_main_network:
    driver: bridge
    name: runtipi_tipi_main_network
